# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C0clwXhYNiRJF4CnenUD6qRYzDKo_Tlu
"""

def get_gradient_at_b(x,y,m,b):
  diff = sum([y_i-(m*x_i+b) for x_i,y_i in zip(x,y)])
  b_gradient = diff * (-2/len(x))

  return b_gradient

def get_gradient_at_m(x,y,m,b):
  diff = sum([x_i*(y_i - (m*x_i+b))for x_i,y_i in zip(x,y)])
  m_gradient = diff * (-2/len(x))

  return m_gradient

def step_gradient(x,y,m_current,b_current,learning_rate):
  b_gradient = get_gradient_at_b(x,y,m_current,b_current)
  m_gradient = get_gradient_at_m(x,y,m_current,b_current)
  b_current -= b_gradient * learning_rate
  m_current -= m_gradient * learning_rate

  return (b_current,m_current)

from matplotlib import pyplot as plt

month = [1,2,3,4,5,6,7,8,9,10,11,12]
revenue = [52, 74, 79, 95, 115, 110, 129, 126, 147, 145, 156, 164]

plt.plot(month, revenue, 'o')
plt.show()

plt.plot(month, revenue, 'o')

b1 = 0
m1 = 0

y1 = [m1 * months + b1 for months in month ]
plt.plot(month, y1)

b2, m2 = step_gradient(month, revenue, b1, m1, 0.001)
y2 = [m2 * months + b2 for months in month ]

plt.plot(month, y2)

plt.show()

import numpy as np


month = np.array([1,2,3,4,5,6,7,8,9,10,11,12])
revenue =  np.array([52, 74, 79, 95, 115, 110, 129, 126, 147, 145, 156, 164])

m = 0
b = 0 

n_data = len(month)

epoch = 500
learning_rate = 0.01

for i in range(epoch):
  hypothesls = m * month + b1
  loss = np.sum((hypothesls - revenue)**2) / n_data
  m_gradient = np.sum((m*month - revenue + b) *2 * month) / n_data
  b_gradient = np.sum((m*month - revenue + b) *2) / n_data

  m -= learning_rate * m_gradient
  b -= learning_rate * b_gradient

  if i % 10 ==0:
    print('Epoch ({:10d}/{:10d}) loss : {:10f}, m : {:10f}, b : {:10f}'.format(i,epoch,loss,m,b))
print ('m : {:10f}' . format(m))
print ('b : {:10f}' . format(b))
print ('result :')
print (m*month+b)

y = [m * x + b for x in month]

plt.plot(month, revenue, 'o')
plt.plot(month, y)
plt.show()